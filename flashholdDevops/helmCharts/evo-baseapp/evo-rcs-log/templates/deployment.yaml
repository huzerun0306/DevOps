apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "demo.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "demo.name" . }}
    helm.sh/chart: {{ include "demo.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    platform: "devops"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /actuator/prometheus
    prometheus.io/port: "1234"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "demo.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "demo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        platform: "devops"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "1234"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
            - name: mongodb.host
              value: "{{ .Values.env.mongodb_host }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-{{ .Values.containerPort.port1 }}
              containerPort: {{ .Values.containerPort.port1 }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/info
              port: {{ .Values.containerPort.port1 }}
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15               
          volumeMounts:
          - name: log
            mountPath: /opt/evo-rcs/logs
            {{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: log
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "demo.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
